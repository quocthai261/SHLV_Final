@using AdminWeb.Dtos.ApiResponse;
@using AdminWeb.Models
@using AdminWeb.Areas.Category.Controllers
@using Microsoft.AspNetCore.Mvc.Localization

@inject IHtmlLocalizer<CertiTypeController> HtmlLocalizer

@{
    var confirmDeleteMessage = String.Format(@HtmlLocalizer["ConfirmDeleteMessage"].Value);
    var confirmDeleteTitle = String.Format(@HtmlLocalizer["ConfirmDeleteTitle"].Value);
}

<div class="container-fluid p-0">
    <h1 class="h4 mb-3 form-title"><strong>Danh sách Quốc gia</strong></h1>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2">
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-header">
                    <h5 class="card-title mb-0">Tìm kiếm</h5>
                    <button class="btn btn-purple-invert btn-filter" type="submit" onclick="onAddNewNationalityClicked()"><span class="glyphicon glyphicon-plus"></span> Thêm mới</button>
                </div>
                <div class="card-body py-3">
                    <div class="row">
                        <div class="col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label("Mã quốc gia").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(50).ShowClearButton(true))
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label("Tên quốc gia").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(100).ShowClearButton(true))
                            </div>
                        </div>
                    </div>
                    <div class="row button-search-row">
                        <div class="col-md-12">
                            <button class="btn btn-purple-style" type="submit">@HtmlLocalizer["Clear"]</button>
                            <button class="btn btn-purple-style" type="submit">@HtmlLocalizer["Search"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2">
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-body py-3">
                    @(Html.DevExtreme().DataGrid()
                        .ID("gridNationalityType")
                        .DataSource(d => d.WebApi()
                        .Area("Category")
                        .Controller("Nationalities")
                        .LoadAction("GetNationalityList")
                        .Key("NationalityId")
                        )
                        .ShowBorders(true)
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .Export(e => e.Enabled(true).AllowExportSelectedData(false)).OnExporting("exportingGridNationality")
                        .Columns(columns =>
                        {
                            columns.Add().Caption("").Width(70).CellTemplate(@<text>
                                <span class="glyphicon glyphicon-edit icon-grid" onclick="onEditNationalityClicked()"></span>
                                <span class="glyphicon glyphicon-trash icon-grid" onclick="onDateleNationalityClicked()"></span>
                            </text>);
                            columns.Add().DataField(nameof(NationalitiesResponseModel.NationalityId)).Visible(false);
                            columns.Add().DataField(nameof(NationalitiesResponseModel.NationalityCode)).Caption("Mã quốc gia").Width(150).Alignment(HorizontalAlignment.Center);
                            columns.Add().DataField(nameof(NationalitiesResponseModel.NationalityName)).Caption("Tên quốc gia");
                            columns.Add().DataField(nameof(NationalitiesResponseModel.IsActive)).Caption("Sử dụng").DataType(GridColumnDataType.Boolean).Alignment(HorizontalAlignment.Center).Width(150);
                            columns.Add().DataField(nameof(NationalitiesResponseModel.CreationDate)).Caption("Ngày tạo").DataType(GridColumnDataType.DateTime).Format("dd/MM/yyyy  HH:mm").Alignment(HorizontalAlignment.Center).Width(150);
                            columns.Add().DataField(nameof(NationalitiesResponseModel.LastUpdatedDate)).Caption("Ngày cập nhật").DataType(GridColumnDataType.DateTime).Format("dd/MM/yyyy  HH:mm").Alignment(HorizontalAlignment.Center).Width(150);
                        })
                        .ColumnHidingEnabled(true)
                        .AllowColumnResizing(true)
                        .ColumnAutoWidth(true)
                        .ColumnMinWidth(50)
                        .ShowRowLines(true)
                        .FilterRow(f => f.Visible(true))
                        .HeaderFilter(f => f.Visible(false))
                        .GroupPanel(p => p.Visible(false))
                        .Grouping(g => g.AutoExpandAll(false))
                        .RemoteOperations(false)
                        .Paging(paging => paging.PageSize(10))
                        .Pager(pager =>
                        {
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new[] { 5, 10, 20 });
                            pager.ShowInfo(true);
                        })
                        )
                </div>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("CreateOrUpdate")

<script>
    function onAddNewNationalityClicked() {

        var modal = document.getElementById("popupNationality");
        modal.classList.add("show", "in");
        modal.style.display = "block";
    }

    function onEditNationalityClicked() {

        var modal = document.getElementById("popupNationality");
        modal.classList.add("show", "in");
        modal.style.display = "block";
    }

    function onDateleNationalityClicked() {
        var myDialog = confirmDialog("Bạn có muốn xóa dữ liệu?", "", "Có", "Không");
        myDialog.show().done(function (dialogResult) {
            if (dialogResult.buttonText === "Có") {
                notify("Xóa dữ liệu thành công", "success");
            }
        });
    }

    function exportingGridNationality(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('Nationality');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'NationalityList.xlsx');
            });
        });
        e.cancel = true;
    }
</script>


