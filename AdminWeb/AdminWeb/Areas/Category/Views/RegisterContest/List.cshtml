@using AdminWeb.Dtos.ApiResponse;
@using AdminWeb.Models
@using AdminWeb.Areas.Category.Controllers

<div class="container-fluid p-0">
    <h1 class="h4 mb-3 form-title"><strong>Danh sách đăng ký thi đua</strong></h1>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2">
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-header">
                    <h5 class="card-title mb-0">Tìm kiếm</h5>                    
                </div>
                <div class="card-body py-3">
                    <div class="row">
                        <div class="col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6">
                            <div class="form-group">
                                @(Html.DevExtreme().DateBox()
                                    .Label("Từ ngày").LabelMode(EditorLabelMode.Floating).ShowClearButton(true))
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6">
                            <div class="form-group">
                                @(Html.DevExtreme().DateBox()
                                    .Label("Đến ngày").LabelMode(EditorLabelMode.Floating).ShowClearButton(true))
                            </div>
                        </div>
                    </div>
                    <div class="row button-search-row">
                        <div class="col-md-12">
                            <button class="btn btn-purple-style" type="submit">Xóa</button>
                            <button class="btn btn-purple-style" type="submit">Tìm kiếm</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2">
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-body py-3">
                    @(Html.DevExtreme().DataGrid()
                        .ID("gridRegisterContestList")
                        .DataSource(d => d.WebApi()
                        .Area("Category")
                        .Controller("RegisterContest")
                        .LoadAction("GetRegisterContestList")
                        .Key("RegisterContestId")
                        )
                        .ShowBorders(true)
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .Export(e => e.Enabled(true).AllowExportSelectedData(false)).OnExporting("exportingGridRegisterContest")
                        .Columns(columns =>
                        {
                            columns.Add().DataField(nameof(RegisterContestResponseModel.RegisterContestId)).Visible(false);
                            columns.Add().DataField(nameof(RegisterContestResponseModel.FCCode)).Caption("Mã tư vấn viên");
                            columns.Add().DataField(nameof(RegisterContestResponseModel.RegisterDate)).Caption("Ngày giờ đăng ký").DataType(GridColumnDataType.DateTime).Format("dd/MM/yyyy  HH:mm").Alignment(HorizontalAlignment.Center).Width(150);
                            columns.Add().DataField(nameof(RegisterContestResponseModel.ContestId)).Caption("Số memo").Width(500);
                            columns.Add().DataField(nameof(RegisterContestResponseModel.Option)).Caption("Lựa chọn").Width(200);
                        })
                        .ColumnHidingEnabled(true)
                        .AllowColumnResizing(true)
                        .ColumnAutoWidth(true)
                        .ColumnMinWidth(50)
                        .ShowRowLines(true)
                        .FilterRow(f => f.Visible(true))
                        .HeaderFilter(f => f.Visible(false))
                        .GroupPanel(p => p.Visible(false))
                        .Grouping(g => g.AutoExpandAll(false))
                        .RemoteOperations(false)
                        .Paging(paging => paging.PageSize(10))
                        .Pager(pager =>
                        {
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new[] { 5, 10, 20 });
                            pager.ShowInfo(true);
                        })
                        )
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    function exportingGridRegisterContest(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('RegisterContest');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'RegisterContestList.xlsx');
            });
        });
        e.cancel = true;
    }
</script>



