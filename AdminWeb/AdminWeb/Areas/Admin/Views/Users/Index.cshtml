@using AdminWeb.Models

<div class="container-fluid p-0">
    <h1 class="h4 mb-3 form-title"><strong>Quản lý tài khoản người dùng</strong></h1>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2">
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-header">
                    <h5 class="card-title mb-0">Tìm kiếm</h5>
                   @*  <button class="btn btn-purple-invert btn-filter" type="submit" onclick="onAddNewClicked('@Url.Action("Add", "Users", new { Area = "Admin" })')"><span class="glyphicon glyphicon-plus"></span> Thêm mới</button>
 *@
                </div>
                <div class="card-body py-3">
                    <div class="row">
                        <div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label("Tên đăng nhập").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(50).ShowClearButton(true))
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label("Tên người dùng").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(100).ShowClearButton(true))
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label("Email").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(100).ShowClearButton(true))
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
                            <div class="form-group">
                                @(Html.DevExtreme().TextBox()
                                    .Label("Số điện thoại").LabelMode(EditorLabelMode.Floating)
                                    .MaxLength(100).ShowClearButton(true))
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
                            <div class="form-group">
                                @(Html.DevExtreme().SelectBox()
                                    .ID("userGroup")
                                    .DataSource(d => d.WebApi().Area("Admin").Controller("Roles").LoadAction("GetRoleListApi"))
                                    .DisplayExpr("name")
                                    .ValueExpr("code")
                                    .Placeholder("Chọn")
                                    .SearchEnabled(true).Label("Nhóm người dùng").LabelMode(EditorLabelMode.Floating)
                                    .ShowClearButton(true)
                                    )
                            </div>
                        </div>
                    </div>
                    <div class="row button-search-row">
                        <div class="col-md-12">
                            <button class="btn btn-purple-style" type="submit">Xóa tìm kiếm</button>
                            <button class="btn btn-purple-style" type="submit">Tìm kiếm</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-xxl-6 d-flex order-3 order-xxl-2">
            <div class="card flex-fill w-100 form-control-ui">
                <div class="card-body py-3">
                    @(Html.DevExtreme().DataGrid()
                            .ID("gridUsersList")
                            .DataSource(d => d.WebApi()
                            .Area("Admin")
                            .Controller("Users")
                            .LoadAction("GetUsersListApi")
                            .Key("UserId")
                            )
                            .ShowBorders(true)
                            .Selection(s => s.Mode(SelectionMode.Single))
                            .Export(e => e.Enabled(true).AllowExportSelectedData(false)).OnExporting("exportingGridUsers")
                            @* .Editing(editing =>
                            {
                                editing.Texts(textBuilder =>
                                {
                                    textBuilder.ConfirmDeleteMessage("Bạn có chắc chắn muốn xóa không");
                                    textBuilder.ConfirmDeleteTitle("Xác nhận xóa");
                                });
                            }) *@
                            .Columns(columns =>
                            {
                                columns.Add().Caption("").Width(115)
                                            .DataField(nameof(SysUsersModel.UserId))
                                            .CellTemplate(@<text>
                                                <div style="text-align: center">
                                                    <a 
                                                        style="cursor: pointer; 
                                                        color: #725dcf !important;
                                                        font-size: 16px !important;" 
                                                        href="@Url.Action("Edit", "Users", new { Area = "Admin" })/<%= value %>" title="edit">
                                                        <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                                                    </a>
                                                </div>
                                                </text>);
                                @* columns.Add().DataField(nameof(SysUsersModel.UserId)).Visible(false); *@
                                columns.Add().DataField(nameof(SysUsersModel.UserName)).Caption("Tên đăng nhập");
                                columns.Add().DataField(nameof(SysUsersModel.Name)).Caption("Họ").Width(400);
                                columns.Add().DataField(nameof(SysUsersModel.SurName)).Caption("Tên").Width(200);
                                columns.Add().DataField(nameof(SysUsersModel.Email)).Caption("Email").Width(200);
                                columns.Add().DataField(nameof(SysUsersModel.PhoneNumber)).Caption("Số điện thoại").Width(200);
                            })
                        .ColumnHidingEnabled(true)
                        .AllowColumnResizing(true)
                        .ColumnAutoWidth(true)
                        .ColumnMinWidth(50)
                        .ShowRowLines(true)
                        .FilterRow(f => f.Visible(true))
                        .HeaderFilter(f => f.Visible(false))
                        .GroupPanel(p => p.Visible(false))
                        .Grouping(g => g.AutoExpandAll(false))
                        .RemoteOperations(false)
                        .Paging(paging => paging.PageSize(10))
                        .Pager(pager =>
                        {
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new[] { 5, 10, 20 });
                            pager.ShowInfo(true);
                        })
                        )
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function exportingGridUsers(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('Users');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'userList.xlsx');
            });
        });
        e.cancel = true;
    }



    // function onAddNewClicked(url) {
    //     window.location.href = url;
    // }
</script>
